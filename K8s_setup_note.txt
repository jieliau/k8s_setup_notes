https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/
https://kubernetes.io/docs/concepts/cluster-administration/networking/#how-to-implement-the-kubernetes-networking-model
https://docs.projectcalico.org/getting-started/kubernetes/self-managed-onprem/onpremises#install-calico-on-nodes


sudo modprobe br_netfilter

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sudo sysctl --system


Install container runtime, it's docker in my example. Please check here: https://docs.docker.com/engine/install/ubuntu/

sudo mkdir /etc/docker
cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF
sudo systemctl enable docker
sudo systemctl daemon-reload
sudo systemctl restart docker



sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl

sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

sudo swapoff -a
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

kubeadm init --control-plane-endpoint 'k8s-endpoint:6443' --apiserver-advertise-address 192.168.33.10 --pod-network-cidr 10.10.0.0/16

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes by copying certificate authorities
and service account keys on each node and then running the following as root:

  kubeadm join k8s-endpoint:6443 --t0k3n "Put your t0k3n here" \
	--discovery-t0k3n-ca-cert-hash sha256:h@sh \
	--control-plane 

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join k8s-endpoint:6443 --t0k3n "Put your t0k3n" \
	--discovery-t0k3n-ca-cert-hash sha256:h@sh 



curl https://docs.projectcalico.org/manifests/calico.yaml -O
kubectl apply -f calico.yaml


kubeadm join k8s-endpoint:6443 --t0k3n "Put your t0k3n" --discovery-t0k3n-ca-cert-hash sha256:h@sh


[preflight] Running pre-flight checks
[preflight] Reading configuration from the cluster...
[preflight] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Starting the kubelet
[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...

This node has joined the cluster:
* Certificate signing request was sent to apiserver and a response was received.
* The Kubelet was informed of the new secure connection details.

Run 'kubectl get nodes' on the control-plane to see this node join the cluster.



root@k8smaster:~# kubectl get all -A
NAMESPACE     NAME                                           READY   STATUS    RESTARTS   AGE
default       pod/nginx-deployment-66b6c48dd5-55sjz          1/1     Running   0          47s
default       pod/nginx-deployment-66b6c48dd5-tbkgw          1/1     Running   0          47s
kube-system   pod/calico-kube-controllers-78d6f96c7b-2wzlb   1/1     Running   0          13m
kube-system   pod/calico-node-78rm7                          1/1     Running   0          9m41s
kube-system   pod/calico-node-qxnf2                          1/1     Running   0          13m
kube-system   pod/coredns-558bd4d5db-2g66j                   1/1     Running   0          16m
kube-system   pod/coredns-558bd4d5db-fr8sk                   1/1     Running   0          16m
kube-system   pod/etcd-k8smaster                             1/1     Running   0          16m
kube-system   pod/kube-apiserver-k8smaster                   1/1     Running   0          16m
kube-system   pod/kube-controller-manager-k8smaster          1/1     Running   0          16m
kube-system   pod/kube-proxy-4fb8j                           1/1     Running   0          9m41s
kube-system   pod/kube-proxy-h5zdf                           1/1     Running   0          16m
kube-system   pod/kube-scheduler-k8smaster                   1/1     Running   0          16m

NAMESPACE     NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)                  AGE
default       service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP                  16m
kube-system   service/kube-dns     ClusterIP   10.96.0.10   <none>        53/UDP,53/TCP,9153/TCP   16m

NAMESPACE     NAME                         DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE
kube-system   daemonset.apps/calico-node   2         2         2       2            2           kubernetes.io/os=linux   13m
kube-system   daemonset.apps/kube-proxy    2         2         2       2            2           kubernetes.io/os=linux   16m

NAMESPACE     NAME                                      READY   UP-TO-DATE   AVAILABLE   AGE
default       deployment.apps/nginx-deployment          2/2     2            2           47s
kube-system   deployment.apps/calico-kube-controllers   1/1     1            1           13m
kube-system   deployment.apps/coredns                   2/2     2            2           16m

NAMESPACE     NAME                                                 DESIRED   CURRENT   READY   AGE
default       replicaset.apps/nginx-deployment-66b6c48dd5          2         2         2       47s
kube-system   replicaset.apps/calico-kube-controllers-78d6f96c7b   1         1         1       13m
kube-system   replicaset.apps/coredns-558bd4d5db                   2         2         2       16m
